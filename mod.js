// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=Object.defineProperty,r=Object.prototype,n=r.toString,o=r.__defineGetter__,l=r.__defineSetter__,i=r.__lookupGetter__,a=r.__lookupSetter__;var c=function(){try{return t({},"x",{}),!0}catch(t){return!1}}()?e:function(t,e,c){var u,f,p,y;if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof c||null===c||"[object Array]"===n.call(c))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+c+"`.");if((f="value"in c)&&(i.call(t,e)||a.call(t,e)?(u=t.__proto__,t.__proto__=r,delete t[e],t[e]=c.value,t.__proto__=u):t[e]=c.value),p="get"in c,y="set"in c,f&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&o&&o.call(t,e,c.get),y&&l&&l.call(t,e,c.set),t};function u(t,e,r){c(t,e,{configurable:!1,enumerable:!1,writable:!1,value:r})}function f(t){return"string"==typeof t}var p="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function y(){return p&&"symbol"==typeof Symbol.toStringTag}var b=Object.prototype.toString;var _=Object.prototype.hasOwnProperty;var g="function"==typeof Symbol?Symbol.toStringTag:"";var v=y()?function(t){var e,r,n,o,l;if(null==t)return b.call(t);r=t[g],l=g,e=null!=(o=t)&&_.call(o,l);try{t[g]=void 0}catch(e){return b.call(t)}return n=b.call(t),e?t[g]=r:delete t[g],n}:function(t){return b.call(t)},s=String.prototype.valueOf;var m=y();function d(t){return"object"==typeof t&&(t instanceof String||(m?function(t){try{return s.call(t),!0}catch(t){return!1}}(t):"[object String]"===v(t)))}function j(t){return f(t)||d(t)}function S(){return/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/}function w(t){if(!f(t))throw new TypeError(function(){var t,e=arguments,r="https://stdlib.io/e/"+e[0]+"?";for(t=1;t<e.length;t++)r+="&arg[]="+encodeURIComponent(e[t]);return r}("0lWBr",t));return(t=/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/.exec(t))?new RegExp(t[1],t[2]):null}u(j,"isPrimitive",f),u(j,"isObject",d),u(S,"REGEXP",/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/);export{w as default};
//# sourceMappingURL=mod.js.map
